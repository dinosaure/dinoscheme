(define iter (lambda (f l) (if (empty l) () (begin (f (hd l)) (iter f (tl l))))))
(define fact (lambda (n) (let (f (lambda (n a) (if (== n 0) a (f (- n 1) (* a n))))) (f n 1))))
(define f (lambda (x) (begin (#num  (fact x)) (#chr '\n'))))
(define l (list 1 2 3 4 5 6 7 8 9 10))

(iter f l)
